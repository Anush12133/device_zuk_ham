<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2013 The CyanogenMod Project
               (C) 2017 The LineageOS Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <string-array name="config_locationProviderPackageNames" translatable="false">
        <!-- The Google provider -->
        <item>com.google.android.gms</item>
        <!-- The standard AOSP fused location provider -->
        <item>com.android.location.fused</item>
    </string-array>

    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- Disable stock OTA components if installed -->
    <string-array name="config_disabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateActivity</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$SecretCodeReceiver</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateServiceReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateActivity</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$ActiveReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$SecretCodeReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateServiceReceiver</item>
    </string-array>

    <!-- Force enabling of some services that could have been previously disabled -->
    <string-array name="config_forceEnabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService</item>
    </string-array>

    <string name="config_mms_user_agent">LineageOS</string>
    <string name="config_mms_user_agent_profile_url">http://www.google.com/oha/rdf/ua-profile-kila.xml</string>

    <!-- Defines the default set of global actions. Actions may still be disabled or hidden based
         on the current state of the device. -->
    <string-array translatable="false" name="config_globalActionsList">
        <item>power</item>
        <item>restart</item>
        <item>airplane</item>
        <item>bugreport</item>
        <item>users</item>
    </string-array>

    <!-- Enable lockscreen rotation by default -->
    <bool name="config_enableLockScreenRotation">true</bool>

    <!-- Whether to persist the notification for when a usb drive device is plugged in -->
    <bool name="config_persistUsbDriveNotification">true</bool>

    <!-- Set this to true to enable the platform's auto-power-save modes like doze and
         app standby.  These are not enabled by default because they require a standard
         cloud-to-device messaging service for apps to interact correctly with the modes
         (such as to be able to deliver an instant message to the device even when it is
         dozing).  This should be enabled if you have such services and expect apps to
         correctly use them when installed on your device.  Otherwise, keep this disabled
         so that applications can still use their own mechanisms. -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <!-- If this is true, long press on power button will be available from a
         non-interactive state. -->
    <bool name="config_supportLongPressPowerWhenNonInteractive">true</bool>

    <!-- Control the behavior when the user panic presses the back button.
            0 - Nothing
            1 - Go to home
    -->
    <integer name="config_backPanicBehavior">1</integer>

     <!-- Enable the option to check proximity sensor when deciding whether to
         turn the screen on
         NOTE ! - Enable for devices that have a fast response proximity sensor -->
    <bool name="config_proximityCheckOnWake">true</bool>
    <integer name="config_proximityCheckTimeout">100</integer>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:

         LIGHTS_RGB_NOTIFICATION_LED = 1
         LIGHTS_RGB_BATTERY_LED = 2
         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)
         LIGHTS_PULSATING_LED = 8
         LIGHTS_SEGMENTED_BATTERY_LED = 16
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32
         LIGHTS_BATTERY_LED = 64

         For example, a device with notification and battery lights
         that support pulsating and RGB control would set this config
         to 75. -->
    <integer name="config_deviceLightCapabilities">75</integer>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <add-resource type="bool" name="config_intrusiveBatteryLed"></add-resource>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">63</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <!--integer name="config_deviceHardwareWakeKeys">65</integer-->

    <!-- Support in Surfaceflinger for blur layers.
         NOTE: This requires additional hardware-specific code. -->
    <add-resource type="bool" name="config_uiBlurEnabled">true</add-resource>

    <!--  Whether Multiuser UI should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">4</integer>

    <!-- Controls the WiFi wakeup feature.
          0 = Not available.
          1 = Available.
    -->
    <integer translatable="false" name="config_wifi_wakeup_available">1</integer>
</resources>
